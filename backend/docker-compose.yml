services:
  app: 
    tty: true # Keep the container running
    restart: always # if container down, restart auto
    image: ticket-booking
    container_name: ticket-booking
    build: .
    ports:
      - 3000:3000 
    env_file:
      - .env
    networks:
      - application #Bind container to network named application.
    depends_on:
      - db  #Start when db ready
    volumes:
      - .:/src/app # bind mount code local into container (hot reload)
    command: air -c .air.toml # Run Air following config file

  db:
    image: postgres:alpine
    container_name: ticket-booking-db
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports: 
      - 5432:5432
    volumes:
      - postgres-db:/var/lib/postgresql/data #store persistent database data
    networks:
      - application
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"] #Check if db ready
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: ticket-booking-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ticket.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - application
    volumes:
      - pgadmin-data:/var/lib/pgadmin

networks:
  application:

volumes:
  postgres-db:
  pgadmin-data:



